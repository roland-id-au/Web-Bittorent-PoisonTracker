<?php
require 'Encoding/IBEncodedValue.php';
require 'Encoding/BEncodingException.class.php';
require 'Encoding/BEncodingParserException.class.php';
require 'Encoding/BEncodingInvalidIndexException.class.php';
require 'Encoding/BEncodingInvalidValueException.class.php';
require 'Encoding/BEncodingOutOfRangeException.class.php';
require 'Encoding/BEncodedDictionaryCollection.class.php';
require 'Encoding/BEncodedDictionary.class.php';
require 'Encoding/BEncodedDictionaryCollectionIterator.class.php';
require 'Encoding/BEncodedListCollection.class.php';
require 'Encoding/BEncodedList.class.php';
require 'Encoding/BEncodedString.class.php';
require 'Encoding/BEncodedInteger.class.php';

require 'Tracker.class.php';
require 'Tracker_Exception.class.php';
require 'Tracker_ConfigurationSectionBase.class.php';
require 'Tracker_ConfigurationSection.class.php';
require 'Tracker_ConfigurationBase.class.php';
require 'Tracker_Configuration.class.php';
require 'Tracker_Data.class.php';
require 'Tracker_Cache.class.php';
require 'Tracker_ForgeryProvider.class.php';
require 'Tracker_Request.class.php';
require 'Tracker_AnnounceRequest.class.php';
require 'Tracker_ScrapeRequest.class.php';
require 'Tracker_Torrent.class.php';
require 'Tracker_Peer.class.php';

function ErrorHandler($ErrorNumber, $ErrorString, $ErrorFile, $ErrorLine){
	$Response = new BEncodedDictionary();
	$Response['failure reason'] = "$ErrorFile:$ErrorLine, $ErrorString".', you sneaky fucking sleaze!';
	echo $Response->Encode();
	exit;
}

set_error_handler('ErrorHandler');

$Tracker = new Tracker("./config.ini");
try{
	$Tracker->Rescan();
}catch(Exception $e){
	$Response = new BEncodedDictionary();
	$Response['failure reason'] = $e->getMessage().', you sneaky fucking sleaze!';
	echo $Response->Encode();
}
?>
